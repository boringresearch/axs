{
    "_parent_entries": [ [ "^", "byname", "python_script" ] ],
    "_producer_rules": [
        [ [ "program_output", "classified_imagenet", "framework=tf" ], [["run"]], { "return_saved_record_entry": true } ]
    ],

    "tensorflow_query": [ "python_package", "package_name=tensorflow" ],
    "python_deps": [
        [ "^^", "python_sync_pip_package", [[ "^^", "get", "tensorflow_query" ]] ],
        [ "^", "byquery", "data_loader,imagenet" ]
    ],

    "model_name": "mobilenet_v2",
    "model_query": [ "inference_ready", "tf_model", [ "^^", "substitute", "model_name=#{model_name}#" ] ],
    "model_entry": [ "^", "byquery", [[ "^^", "get", "model_query" ]], {}, ["model_query"] ],
    "model_path": [ "^^", "execute", [[
        [ "get", "model_entry" ],
        [ "get_path_from", "model_rel_path" ]
    ]] ],
    "resolution": [ "^^", "dig", "model_entry.resolution" ],
    "input_layer_name": [ "^^", "dig", "model_entry.input_layer_name" ],
    "output_layer_name": [ "^^", "dig", "model_entry.output_layer_name" ],
    "normalize_symmetric": [ "^^", "dig", "model_entry.normalization.normalize_symmetric" ],
    "subtract_mean_bool": [ "^^", "dig", "model_entry.normalization.subtract_mean_bool" ],
    "given_channel_means": [ "^^", "dig", "model_entry.normalization.given_channel_means" ],
    "given_channel_stds": [ "^^", "dig", "model_entry.normalization.given_channel_stds" ],
    "data_layout":  [ "^^", "dig", "model_entry.normalization.data_layout" ],

    "preprocess_method": "pillow",
    "preprocessed_images_query": [ "preprocessed", "dataset_name=imagenet", [ "preprocess_method", [ "^^", "get", "preprocess_method" ]], [ "resolution", [ "^^", "get", "resolution" ]],[ "first_n", [ "^^", "get", "num_of_images" ]] ],
    "preprocessed_images_dir": [ "^", "execute", [[
        [ "byquery", [[ "^^", "get", "preprocessed_images_query" ]] ],
        [ "get_path" ]
    ]], {}, ["preprocessed_images_query"] ],

    "num_of_images": 20,
    "output_file_name": "program_output.json",
    "framework": "tf",

    "execution_device": "",

    "max_batch_size": 25,
    "top_n_max": 10,

    "output_file_path": [ "^^", "execute", [[
        [ "get", "__record_entry__" ],
        [ "attach", [ "^", "work_collection" ] ],
        [ "plant", [ "^^", "substitute", [[
            "_parent_entries", [ "AS^IS", "AS^IS", [ "^", "byname", "base_imagenet_experiment" ] ],
            "tags", [ "program_output", "classified_imagenet" ],
            "num_of_images", "#{num_of_images}#",
            "model_name", "#{model_name}#",
            "framework", "#{framework}#",
            "preprocessed_images_dir", "#{preprocessed_images_dir}#",
            "output_file_name", "#{output_file_name}#"
         ]] ] ],
         [ "save" ],
         [ "get_path_from", "output_file_name" ]
      ]] ],

    "errorize_output": true,

    "rel_script_path": "tf_classify.py",

    "script_extra_params": [ "^^", "substitute", "#{model_name}# \"#{model_path}#\" \"#{preprocessed_images_dir}#\" #{resolution}# \"#{input_layer_name}#\" \"#{output_layer_name}#\" \"#{normalize_symmetric}#\" \"#{subtract_mean_bool}#\" \"#{given_channel_means}#\" \"#{given_channel_stds}#\" \"#{data_layout}#\" #{num_of_images}# #{max_batch_size}# \"#{output_file_path}#\" #{top_n_max}#" ]
}

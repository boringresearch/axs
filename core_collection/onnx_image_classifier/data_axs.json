{
    "_parent_entries": [ [ "^", "byname", "python_script" ] ],

    "onnxruntime_query":    [ "python_package", "package_name=onnxruntime" ],
    "pillow_query":         [ "python_package", "package_name=pillow" ],
    "python_deps": [
        [ "^", "byquery", [ [ "^^", "get", "onnxruntime_query" ] ] ],
        [ "^", "byquery", [ [ "^^", "get", "pillow_query" ] ] ]
    ],
    "model_name": "resnet50",
    "model_query": [ "downloaded", "onnx_model", [ "^^", "substitute", "model_name=#{model_name}#" ] ],
    "model_entry": [ "^", "byquery", [[ "^^", "get", "model_query" ]] ],
    "model_path": [ "^^", "execute", [[
        [ "get", "model_entry" ],
        [ "get_path" ]
    ]] ],
    "normalize_data_bool": [ "^^", "dig", "model_entry.normalize_data_bool" ],
    "subtract_mean_bool": [ "^^", "dig", "model_entry.subtract_mean_bool" ],
    "given_channel_means": [ "^^", "dig", "model_entry.given_channel_means" ],
    "imagenet_query": [ "extracted", "imagenet" ],
    "imagenet_dir": [ "^", "execute", [[
        [ "byquery", [[ "^^", "get", "imagenet_query" ]] ],
        [ "get_path" ]
    ]] ],

    "num_of_images": 20,
    "output_file_name": "script_output.json",
    "framework": "onnx",


    "max_batch_size": 8,

    "cpu_threads": 0,

    "output_file_path": [ "^^", "execute", [[
        [ "get", "__record_entry__" ],
        [ "attach", [ "^", "work_collection" ] ],
        [ "plant", [ "^^", "substitute", [[
            "tags", [ "script_output", "classified_imagenet", "onnx_model" ],
            "num_of_images", "#{num_of_images}#",
            "model_name", "#{model_name}#",
            "framework", "#{framework}#",
            "output_file_name", "#{output_file_name}#",
            "script_output", [ "AS^IS", "AS^IS", "^^", "load_json", [[ "^^", "get_path_from", "output_file_name" ]] ],
            "accuracy", [ "AS^IS", "AS^IS", "^^", "execute", [[
                [ "get_kernel" ],
                [ "byname", "imagenet_meta" ],
                [ "measure_accuracy", [[ "^^", "dig", "script_output.predictions" ]] ]
             ]] ],
            "print_top_n_predictions", [ "AS^IS", "AS^IS", "^^", "execute", [[
                [ "get_kernel" ],
                [ "byname", "imagenet_meta" ],
                [ "full_print_predictions", [[ "^^", "dig", "script_output.top_n" ]] ]
            ]] ]
         ]] ] ],
         [ "save" ],
         [ "get_path_from", "output_file_name" ]
      ]] ],

    "rel_script_path": "onnx_classify.py",

    "script_extra_params": [ "^^", "substitute", "\"#{model_path}#\" \"#{imagenet_dir}#\" #{num_of_images}# #{max_batch_size}# #{cpu_threads}# \"#{output_file_path}#\" #{model_name}# \"#{normalize_data_bool}#\" \"#{subtract_mean_bool}#\" \"#{given_channel_means}#\"" ]
}

{
    "_parent_entries": [ [ "^", "byname", "python_script" ] ],
    "_producer_rules": [
        [ [ "program_output", "bert_squad", "framework=onnx" ], [["run"]], { "return_saved_record_entry": true } ]
    ],

    "num_gpus": [ "^", "execute", [[
                       [ "byquery", "shell_tool,can_gpu" ],
                       [ "run" ]
                ]] ],
    "onnxruntime_name": [ "^", "case",[ ["^^", "get", "num_gpus"], "0", "onnxruntime" ], {"default_value": "onnxruntime-gpu"}, ["num_gpus"]],
    "for_python36_option": [ "^^", "case", [ ["^^", "get", "python_major_dot_minor"], "3.6", "for_python36" ], {"default_value": "" } ],
    "onnxruntime_query": [ "python_package", ["package_name", ["^^", "get", "onnxruntime_name"]], ["^^", "get", "for_python36_option"]],

    "tensorflow_query": [ "python_package", "package_name=tensorflow"],
    "torch_query": [ "python_package", "package_name=torch", [ "^^", "case", [ [ "^^", "get", "num_gpus"] , "0" , null ], {"default_value": "with_cuda" } ] ],

    "python_deps": [
        [ "^^", "python_sync_pip_package", [[ "^^", "get", "tensorflow_query" ]] ],
        [ "^^", "python_sync_pip_package", [[ "^^", "get", "onnxruntime_query" ]] ],
        [ "^^", "python_sync_pip_package", [[ "^^", "get", "torch_query" ]] ]
    ],
    "mlperf_inference_git_entry": [ "^", "byquery", "git_repo,repo_name=mlperf_inference_git" ],

    "mlperf_inference_path": [ "^^", "execute", [[
        [ "get", "mlperf_inference_git_entry" ],
        [ "get_path" ]
    ]], {}, ["mlperf_inference_git_entry"] ],

    "model_name": "bert_large",
    "model_query": [ "inference_ready", "onnx_model", [ "^^", "substitute", "model_name=#{model_name}#" ] ],
    "model_entry": [ "^", "byquery", [[ "^^", "get", "model_query" ]], {}, ["model_query"] ],
    "model_path": [ "^^", "execute", [[
        [ "get", "model_entry" ],
        [ "get_path" ]
    ]] ],
    "model_input_layers_tms": [ "^^", "dig", "model_entry.input_layers_tms" ],

    "squad_dataset_query":[ "downloaded", "squad_original" ],
    "squad_dataset_entry": [ "^", "byquery", [[ "^^", "get", "squad_dataset_query" ]], {}, ["squad_dataset_query"] ],
    "squad_dataset_original_path": [ "^^", "execute", [[
        [ "get", "squad_dataset_entry" ],
        [ "get_path" ]
    ]] ],

    "batch_size": "1",
    "batch_count": "1",

    "dataset_max_seq_length": 384,
    "tokenized_squad_query":[ "tokenized", "squad_v1_1", [ "^^", "substitute", "dataset_max_seq_length=#{dataset_max_seq_length}#" ] ],
    "tokenized_squad_entry": [ "^", "byquery", [[ "^^", "get", "tokenized_squad_query" ]], {}, ["tokenized_squad_query"] ],
    "tokenized_squad_path": [ "^^", "execute", [[
        [ "get", "tokenized_squad_entry" ],
        [ "get_path" ]
    ]] ],

    "output_file_name": "program_output.json",
    "framework": "onnx",
    "execution_device": "",
    "output_file_path": [ "^^", "execute", [[
        [ "get", "__record_entry__" ],
        [ "attach", [ "^", "work_collection" ] ],
        [ "plant", [ "^^", "substitute", [[
            "_parent_entries", [ "AS^IS", "AS^IS", [ "^", "byname", "base_bert_experiment" ] ],
            "tags", [ "program_output", "bert_squad" ],
            "model_name", "#{model_name}#",
            "framework", "#{framework}#",
            "output_file_name", "#{output_file_name}#",
            "desired_python_version", "#{desired_python_version}#"
         ]] ] ],
         [ "save" ],
         [ "get_path_from", "output_file_name" ]
      ]] ],

    "errorize_output": true,

    "rel_script_path": "bert_squad_onnxruntime.py",

    "script_extra_params": [ "^^", "substitute", "\"#{mlperf_inference_path}#\" \"#{squad_dataset_original_path}#\" \"#{tokenized_squad_path}#\" \"#{model_path}#\" \"#{model_input_layers_tms}#\" \"#{batch_size}#\" \"#{batch_count}#\" \"#{execution_device}#\" \"#{output_file_path}#\"" ]
}
